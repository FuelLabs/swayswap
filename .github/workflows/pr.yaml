name: "CI"

on:
  pull_request:
    types: [opened, synchronize, ready_for_review, edited, closed]

env:
  RUST_VERSION: 1.61.0
  FORC_VERSION: 0.14.5
  NODE_VERSION: 16
  PNPM_VERSION: 7.0.0
  COMPOSE_VERSION: 2.6.0
  CHROME_VERSION: 95.0.4638.69
  # "fake" dbus address to prevent errors
  # https://github.com/SeleniumHQ/docker-selenium/issues/87
  DBUS_SESSION_BUS_ADDRESS: /dev/null
  TERM: xterm

jobs:
  cancel-previous-run:
    name: Cancel previous actions
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: n1hility/cancel-previous-runs@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  validate-pr:
    name: Validate PR title
    runs-on: ubuntu-latest
    steps:
      - name: Pull request title check
        uses: amannn/action-semantic-pull-request@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-and-test:
    name: Build and test
    runs-on: ubuntu-latest
    # container:
    #   image: cypress/browsers:node16.5.0-chrome97-ff96
      # options: --user 1001
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # using same dependencies from cypress/browsers:node16.5.0-chrome97-ff96 ... not using directly the container because we still need ubuntu-latest preset
      - name: Install Cypress Dependencies
        run: |
          sudo apt-get update && \
            sudo apt-get install --no-install-recommends -y \
            libgtk2.0-0 \
            libgtk-3-0 \
            libnotify-dev \
            libgconf-2-4 \
            libgbm-dev \
            libnss3 \
            libxss1 \
            libasound2 \
            libxtst6 \
            xauth \
            xvfb \
            vim-tiny \
            nano \
            fonts-noto-color-emoji \
            fonts-arphic-bkai00mp \
            fonts-arphic-bsmi00lp \
            fonts-arphic-gbsn00lp \
            fonts-arphic-gkai00mp \
            fonts-arphic-ukai \
            fonts-arphic-uming \
            ttf-wqy-zenhei \
            ttf-wqy-microhei \
            xfonts-wqy \
            fonts-liberation \
            libappindicator3-1 \
            xdg-utils \
            zip

      # # using same chrome install method from cypress/browsers:node16.5.0-chrome97-ff96 ... not using directly the container because we still need ubuntu-latest preset
      # - name: Install Chrome
      #   # first remove chrome from ubuntu-lates, then install new one
      #   # TODO: just use default chrome from ubuntu-latest. we're changing it because of https://github.com/cypress-io/cypress/discussions/22128
      #   run: |
      #     sudo apt purge google-chrome-stable -y
      #     sudo wget -O /usr/src/google-chrome-stable_current_amd64.deb "http://dl.google.com/linux/chrome/deb/pool/main/g/google-chrome-stable/google-chrome-stable_${{ env.CHROME_VERSION }}-1_amd64.deb"
      #     sudo dpkg -i /usr/src/google-chrome-stable_current_amd64.deb
      #     sudo apt-get install -f -y
      #     sudo rm -rf /usr/src/google-chrome-stable_current_amd64.deb
      #     google-chrome --version

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ env.RUST_VERSION }}
          override: true
        # selecting a toolchain either by action or manual `rustup` calls should happen
        # before the cache plugin, as it uses the current rustc version as its cache key
      - uses: Swatinem/rust-cache@v1

      - name: Set git config
        run: |
          git config --global core.bigfilethreshold 100m
      - name: Install Forc
        run: |
          curl -sSLf https://github.com/FuelLabs/sway/releases/download/v${{ env.FORC_VERSION }}/forc-binaries-linux_amd64.tar.gz -L -o forc.tar.gz
          tar -xvf forc.tar.gz
          chmod +x forc-binaries/forc
          mv forc-binaries/forc /usr/local/bin/forc

      # As contracts are really Heavy to build
      # and test we only test it when some
      # contract was updated on the PR
      - name: Change contracts
        id: changed-contracts
        uses: tj-actions/changed-files@v22.2
        with:
          files: |
            **/*.sw
            **/*.rs
            **/Cargo.toml
            **/Forc.toml

      - name: Test Contracts
        if: ${{ steps.changed-contracts.outputs.any_changed == 'true' }}
        run: |
          ./packages/scripts/test-contracts.sh

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: "https://registry.npmjs.org"

      - name: Cache PNPM modules
        uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-

      - name: Setup PNPM
        uses: pnpm/action-setup@v2.1.0
        with:
          version: ${{ env.PNPM_VERSION }}
          run_install: true

      # # Check lint as early as possible to avoid
      # # Long fail CI and fail on this step
      - name: Lint
        run: |
          pnpm lint

      - name: Setup Docker
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      # Make github action to use the latest version of
      # docker compose without it docker compose down
      # has issues with memory nil pointer
      # https://github.com/docker/compose/pull/9354
      - name: Install Compose
        uses: ndeloof/install-compose-action@v0.0.1
        with:
          version: v${{ env.COMPOSE_VERSION }}

      - name: Docker info
        run: |
          docker info

      - name: Setup scripts
        run: |
          pnpm scripts:setup

      - name: "End-to-end tests"
        uses: cypress-io/github-action@v4
        with:
          # skip install, as 1 - we're doing in other step; 2 - cypress doesnt support pnpm yet https://github.com/cypress-io/github-action/issues/145
          install: false
          command: pnpm ci:test:e2e
          start: pnpm dev-test
          wait-on: "http://localhost:3001"
          wait-on-timeout: 120
          browser: chrome
          record: false
        env:
          # CYPRESS_PROJECT_ID: ${{ secrets.CYPRESS_PROJECT_ID }}
          # CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          # Recommended: pass the GitHub token lets this action correctly
          # determine the unique run id necessary to re-run the checks
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # DEBUG: "cypress:server:*"
          # DEBUG: "cypress:server:args"
          DEBUG: "cypress:server:request"
          NODE_ENV: "test"

      - name: Run test
        run: |
          pnpm ci:test:coverage
