/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import type {
  Interface,
  FunctionFragment,
  DecodedValue,
  Contract,
  Overrides,
  BigNumberish,
  BytesLike,
  BigNumber,
} from 'fuels';

interface SwayswapContractAbiInterface extends Interface {
  functions: {
    add_exchange_contract: FunctionFragment;
    get_exchange_contract: FunctionFragment;
  };

  encodeFunctionData(functionFragment: 'add_exchange_contract', values: [string, string]): string;
  encodeFunctionData(functionFragment: 'get_exchange_contract', values: [string]): string;

  decodeFunctionData(functionFragment: 'add_exchange_contract', data: BytesLike): DecodedValue;
  decodeFunctionData(functionFragment: 'get_exchange_contract', data: BytesLike): DecodedValue;
}

export class SwayswapContractAbi extends Contract {
  interface: SwayswapContractAbiInterface;
  functions: {
    add_exchange_contract(
      token_id: string,
      exchange_id: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<void>;

    get_exchange_contract(
      token_id: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<string>;
  };
  callStatic: {
    add_exchange_contract(
      token_id: string,
      exchange_id: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<void>;

    get_exchange_contract(
      token_id: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<string>;
  };

  add_exchange_contract(
    token_id: string,
    exchange_id: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<void>;

  get_exchange_contract(
    token_id: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<string>;
}
