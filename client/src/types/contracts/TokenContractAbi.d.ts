/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import type {
  Interface,
  FunctionFragment,
  DecodedValue,
  Contract,
  Overrides,
  BigNumberish,
  BytesLike,
  BigNumber,
} from "fuels";

export type ContractIdStruct = { value: string };

export type AddressStruct = { value: string };

interface TokenContractAbiInterface extends Interface {
  functions: {
    "mint_coins(u64)": FunctionFragment;
    "burn_coins(u64)": FunctionFragment;
    "force_transfer_coins(u64,struct ContractId,struct ContractId)": FunctionFragment;
    "transfer_coins_to_output(u64,struct ContractId,struct Address)": FunctionFragment;
    "get_balance(struct ContractId,struct ContractId)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "mint_coins",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "burn_coins",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "force_transfer_coins",
    values: [BigNumberish, ContractIdStruct, ContractIdStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "transfer_coins_to_output",
    values: [BigNumberish, ContractIdStruct, AddressStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "get_balance",
    values: [ContractIdStruct, ContractIdStruct]
  ): string;

  decodeFunctionData(
    functionFragment: "mint_coins",
    data: BytesLike
  ): DecodedValue;
  decodeFunctionData(
    functionFragment: "burn_coins",
    data: BytesLike
  ): DecodedValue;
  decodeFunctionData(
    functionFragment: "force_transfer_coins",
    data: BytesLike
  ): DecodedValue;
  decodeFunctionData(
    functionFragment: "transfer_coins_to_output",
    data: BytesLike
  ): DecodedValue;
  decodeFunctionData(
    functionFragment: "get_balance",
    data: BytesLike
  ): DecodedValue;
}

export class TokenContractAbi extends Contract {
  interface: TokenContractAbiInterface;
  functions: {
    mint_coins(
      mint_amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<void>;

    "mint_coins(u64)"(
      mint_amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<void>;

    burn_coins(
      burn_amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<void>;

    "burn_coins(u64)"(
      burn_amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<void>;

    force_transfer_coins(
      coins: BigNumberish,
      asset_id: ContractIdStruct,
      target: ContractIdStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<void>;

    "force_transfer_coins(u64,struct ContractId,struct ContractId)"(
      coins: BigNumberish,
      asset_id: ContractIdStruct,
      target: ContractIdStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<void>;

    transfer_coins_to_output(
      coins: BigNumberish,
      asset_id: ContractIdStruct,
      recipient: AddressStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<void>;

    "transfer_coins_to_output(u64,struct ContractId,struct Address)"(
      coins: BigNumberish,
      asset_id: ContractIdStruct,
      recipient: AddressStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<void>;

    get_balance(
      target: ContractIdStruct,
      asset_id: ContractIdStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "get_balance(struct ContractId,struct ContractId)"(
      target: ContractIdStruct,
      asset_id: ContractIdStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;
  };

  mint_coins(
    mint_amount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<void>;

  "mint_coins(u64)"(
    mint_amount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<void>;

  burn_coins(
    burn_amount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<void>;

  "burn_coins(u64)"(
    burn_amount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<void>;

  force_transfer_coins(
    coins: BigNumberish,
    asset_id: ContractIdStruct,
    target: ContractIdStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<void>;

  "force_transfer_coins(u64,struct ContractId,struct ContractId)"(
    coins: BigNumberish,
    asset_id: ContractIdStruct,
    target: ContractIdStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<void>;

  transfer_coins_to_output(
    coins: BigNumberish,
    asset_id: ContractIdStruct,
    recipient: AddressStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<void>;

  "transfer_coins_to_output(u64,struct ContractId,struct Address)"(
    coins: BigNumberish,
    asset_id: ContractIdStruct,
    recipient: AddressStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<void>;

  get_balance(
    target: ContractIdStruct,
    asset_id: ContractIdStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BigNumber>;

  "get_balance(struct ContractId,struct ContractId)"(
    target: ContractIdStruct,
    asset_id: ContractIdStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BigNumber>;
}
