/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Interface, FunctionFragment, DecodedValue } from "@fuel-ts/abi-coder";
import { Contract, Overrides } from "@fuel-ts/contract";
import { Provider } from "@fuel-ts/providers";
import { BigNumberish } from "@ethersproject/bignumber";
import { BytesLike } from "@ethersproject/bytes";

interface SwayswapAbiInterface extends Interface {
  functions: {
    "deposit(u64,u64,b256,struct DepositParams)": FunctionFragment;
    "withdraw(u64,u64,b256,struct WithdrawParams)": FunctionFragment;
    "add_liquidity(u64,u64,b256,struct AddLiquidityParams)": FunctionFragment;
    "remove_liquidity(u64,u64,b256,struct RemoveLiquidityParams)": FunctionFragment;
    "swap_with_minimum(u64,u64,b256,struct SwapWithMinimumParams)": FunctionFragment;
    "swap_with_maximum(u64,u64,b256,struct SwapWithMaximumParams)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "deposit",
    values: [BigNumberish, BigNumberish, string, any]
  ): string;
  encodeFunctionData(
    functionFragment: "withdraw",
    values: [BigNumberish, BigNumberish, string, any]
  ): string;
  encodeFunctionData(
    functionFragment: "add_liquidity",
    values: [BigNumberish, BigNumberish, string, any]
  ): string;
  encodeFunctionData(
    functionFragment: "remove_liquidity",
    values: [BigNumberish, BigNumberish, string, any]
  ): string;
  encodeFunctionData(
    functionFragment: "swap_with_minimum",
    values: [BigNumberish, BigNumberish, string, any]
  ): string;
  encodeFunctionData(
    functionFragment: "swap_with_maximum",
    values: [BigNumberish, BigNumberish, string, any]
  ): string;

  decodeFunctionData(
    functionFragment: "deposit",
    data: BytesLike
  ): DecodedValue;
  decodeFunctionData(
    functionFragment: "withdraw",
    data: BytesLike
  ): DecodedValue;
  decodeFunctionData(
    functionFragment: "add_liquidity",
    data: BytesLike
  ): DecodedValue;
  decodeFunctionData(
    functionFragment: "remove_liquidity",
    data: BytesLike
  ): DecodedValue;
  decodeFunctionData(
    functionFragment: "swap_with_minimum",
    data: BytesLike
  ): DecodedValue;
  decodeFunctionData(
    functionFragment: "swap_with_maximum",
    data: BytesLike
  ): DecodedValue;
}

export class SwayswapAbi extends Contract {
  interface: SwayswapAbiInterface;
  functions: {
    deposit(
      gas_: BigNumberish,
      amount_: BigNumberish,
      asset_id_: string,
      params: any,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<any>;

    "deposit(u64,u64,b256,struct DepositParams)"(
      gas_: BigNumberish,
      amount_: BigNumberish,
      asset_id_: string,
      params: any,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<any>;

    withdraw(
      gas_: BigNumberish,
      amount_: BigNumberish,
      asset_id_: string,
      params: any,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<any>;

    "withdraw(u64,u64,b256,struct WithdrawParams)"(
      gas_: BigNumberish,
      amount_: BigNumberish,
      asset_id_: string,
      params: any,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<any>;

    add_liquidity(
      gas_: BigNumberish,
      amount_: BigNumberish,
      asset_id_: string,
      params: any,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<any>;

    "add_liquidity(u64,u64,b256,struct AddLiquidityParams)"(
      gas_: BigNumberish,
      amount_: BigNumberish,
      asset_id_: string,
      params: any,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<any>;

    remove_liquidity(
      gas_: BigNumberish,
      amount_: BigNumberish,
      asset_id_: string,
      params: any,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<any>;

    "remove_liquidity(u64,u64,b256,struct RemoveLiquidityParams)"(
      gas_: BigNumberish,
      amount_: BigNumberish,
      asset_id_: string,
      params: any,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<any>;

    swap_with_minimum(
      gas_: BigNumberish,
      amount_: BigNumberish,
      asset_id_: string,
      params: any,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<any>;

    "swap_with_minimum(u64,u64,b256,struct SwapWithMinimumParams)"(
      gas_: BigNumberish,
      amount_: BigNumberish,
      asset_id_: string,
      params: any,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<any>;

    swap_with_maximum(
      gas_: BigNumberish,
      amount_: BigNumberish,
      asset_id_: string,
      params: any,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<any>;

    "swap_with_maximum(u64,u64,b256,struct SwapWithMaximumParams)"(
      gas_: BigNumberish,
      amount_: BigNumberish,
      asset_id_: string,
      params: any,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<any>;
  };

  deposit(
    gas_: BigNumberish,
    amount_: BigNumberish,
    asset_id_: string,
    params: any,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<any>;

  "deposit(u64,u64,b256,struct DepositParams)"(
    gas_: BigNumberish,
    amount_: BigNumberish,
    asset_id_: string,
    params: any,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<any>;

  withdraw(
    gas_: BigNumberish,
    amount_: BigNumberish,
    asset_id_: string,
    params: any,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<any>;

  "withdraw(u64,u64,b256,struct WithdrawParams)"(
    gas_: BigNumberish,
    amount_: BigNumberish,
    asset_id_: string,
    params: any,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<any>;

  add_liquidity(
    gas_: BigNumberish,
    amount_: BigNumberish,
    asset_id_: string,
    params: any,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<any>;

  "add_liquidity(u64,u64,b256,struct AddLiquidityParams)"(
    gas_: BigNumberish,
    amount_: BigNumberish,
    asset_id_: string,
    params: any,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<any>;

  remove_liquidity(
    gas_: BigNumberish,
    amount_: BigNumberish,
    asset_id_: string,
    params: any,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<any>;

  "remove_liquidity(u64,u64,b256,struct RemoveLiquidityParams)"(
    gas_: BigNumberish,
    amount_: BigNumberish,
    asset_id_: string,
    params: any,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<any>;

  swap_with_minimum(
    gas_: BigNumberish,
    amount_: BigNumberish,
    asset_id_: string,
    params: any,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<any>;

  "swap_with_minimum(u64,u64,b256,struct SwapWithMinimumParams)"(
    gas_: BigNumberish,
    amount_: BigNumberish,
    asset_id_: string,
    params: any,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<any>;

  swap_with_maximum(
    gas_: BigNumberish,
    amount_: BigNumberish,
    asset_id_: string,
    params: any,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<any>;

  "swap_with_maximum(u64,u64,b256,struct SwapWithMaximumParams)"(
    gas_: BigNumberish,
    amount_: BigNumberish,
    asset_id_: string,
    params: any,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<any>;
}
